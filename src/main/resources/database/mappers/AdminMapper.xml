<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
    <mapper namespace="com.fd.s1.admin.AdminMapper">
    
        <select id="getMember" parameterType="Pager" resultType="MemberVO">
			SELECT * FROM USER    		    		
	 		WHERE ID  is not null
	 		AND
	 		(ID LIKE concat('%', #{search},'%') or
	 		NAME LIKE concat('%', #{search},'%'))
	    	ORDER BY USERTYPE ASC, ID ASC LIMIT #{startRow}, #{perPage}
    	</select>
    
        <update id="setMemberGrade" parameterType="MemberVO">
			UPDATE USER SET USERTYPE = #{userType} WHERE ID=#{id}
    	</update>
    	<select id="getTotalCount" parameterType="pager" resultType="Long">
			SELECT COUNT(ID) FROM USER    		    		
	 		WHERE
	 		(ID LIKE concat('%', #{search},'%') or
	 		NAME LIKE concat('%', #{search},'%'))
    	</select>
    	<select id="getUserEmailCount" parameterType="Pager" resultType="Long">
			SELECT COUNT(ID) FROM USER    		    		
	 		WHERE
	 		EMAIL = #{search}
    	</select>
    	
    	<select id="getEmailMList" parameterType="Pager" resultType="MemberVO">
			SELECT * FROM USER    		    		
	 		WHERE ID  is not null
	 		AND
	 		(ID LIKE concat('%', #{search},'%') or
	 		NAME LIKE concat('%', #{search},'%'))
    	</select>
    	
    	
    	 <select id="getCoupon" parameterType="Pager" resultType="CouponVO">
			SELECT * FROM COUPON 		    		
	 		WHERE COUPONID  is not null
	 		AND
	 		(COUPONID LIKE concat('%', #{search},'%') or
	 		COUPONNAME LIKE concat('%', #{search},'%'))
	    	ORDER BY COUPONID ASC LIMIT #{startRow}, #{perPage}
    	</select>
    	
    	<select id="getSalesTrend" resultType="AnalysisVO">
			SELECT CONCAT(YEAR(OD.ORDERDATE),'-', MONTH(OD.ORDERDATE)) AS Y_MONTH, (SUM(OD.TOTALPRICE)/100000000) WON, (row_number() over(ORDER BY ORDERDATE ASC)*100) AS USER
			FROM (SELECT * FROM ORDERS ORDER BY ORDERDATE ASC) OD
			WHERE YEAR (OD.ORDERDATE) IN ('2021', '2022')
			GROUP BY Y_MONTH
			ORDER BY OD.ORDERDATE ASC
    	</select>
    	
    	<select id="getHAU" resultType="AnalysisVO">
			SELECT CASE SUBSTR(DH.DAYHOUR,1,1)
						    WHEN '2' THEN 'Mon'
						    WHEN '3' THEN 'Tue'
						    WHEN '4' THEN 'Wed'
						    WHEN '5' THEN 'Thu'
						    WHEN '6' THEN 'Fri'
						    WHEN '7' THEN 'Sat'
						    WHEN '1' THEN 'Sun'
						    END AS weekday, ABS(SUBSTR(DAYHOUR,3)) AS HOUR , COUNT(UL.ACCESS) AS VALUE
			FROM
			(	SELECT CONCAT(W.N,'-', H.N) AS DAYHOUR
				FROM 	(WITH RECURSIVE WD AS (
				          	SELECT 1 AS n
				          	UNION ALL
				          	SELECT n + 1 FROM WD WHERE n <![CDATA[<]]> 7)
				  			SELECT n FROM WD) W,
						(WITH RECURSIVE HH AS (
				          	SELECT 0 AS n
				          	UNION ALL
				          	SELECT n + 1 FROM HH WHERE n <![CDATA[<]]> 23)
				  			SELECT n FROM HH) H 				) AS DH
			LEFT JOIN (SELECT * FROM USERLOG WHERE DATE_FORMAT(ACCESS,'%Y-%m-%d') BETWEEN DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -7 DAY), '%Y-%m-%d') AND DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -1 DAY), '%Y-%m-%d')) UL
			ON((DAYOFWEEK(UL.ACCESS) = SUBSTR(DAYHOUR,1,1)) AND(HOUR(UL.ACCESS) = SUBSTR(DAYHOUR,3)))
			GROUP BY SUBSTR(DH.DAYHOUR,1,1),HOUR
			ORDER BY SUBSTR(DH.DAYHOUR,1,1),HOUR
    	</select>
    	
    	<select id="getShopSalesTrend" resultType="AnalysisVO">
			SELECT S.SHOPNAME AS SHOPNAME ,(SUM(ORDERCOUNT*MENUPRICE)/100000000) AS WON, COUNT(DISTINCT DELINUM) AS VALUE
			FROM ORDERDETAIL OD
			LEFT JOIN SHOP S 
			ON(S.SHOPNUM=OD.SHOPNUM)
			WHERE DELINUM IN 	(SELECT DELINUM  
								FROM ORDERS 
								WHERE ORDERDATE <![CDATA[>]]> DATE_ADD(NOW(), INTERVAL -30 DAY)) 
			GROUP BY OD.SHOPNUM
			ORDER BY WON DESC
    	</select>

    	<select id="getGender" resultType="AnalysisVO">
			SELECT CASE GENDER WHEN '0' THEN '남자' WHEN '1' THEN '여자' END AS GENDER ,COUNT(GENDER) AS VALUE  FROM USER WHERE USERTYPE = 2 GROUP BY GENDER
    	</select>

    	<select id="getAge" resultType="AnalysisVO">
			SELECT CASE 
					WHEN AGEGROUP <![CDATA[<]]> 20 THEN '20세 미만'
			        WHEN AGEGROUP <![CDATA[<]]> 30 THEN '20대'
			        WHEN AGEGROUP <![CDATA[<]]> 40 THEN '30대'
			        WHEN AGEGROUP <![CDATA[<]]> 50 THEN '40대'
			        WHEN AGEGROUP <![CDATA[<]]> 60 THEN '50대'
			        ELSE '60세 이상' END AS AGEGROUP, COUNT(G.BIRTH) AS VALUE
			FROM (SELECT TRUNCATE((ABS(DATE_FORMAT(NOW(), '%Y'))-ABS(DATE_FORMAT(BIRTH, '%Y'))+1),-1) AS AGEGROUP, BIRTH FROM USER) G
			GROUP BY AGEGROUP
    	</select>


    	<select id="getCouponTotalCount" parameterType="pager" resultType="Long">
	 		SELECT COUNT(COUPONID) FROM COUPON 		    		
	 		WHERE
	 		(COUPONID LIKE concat('%', #{search},'%') or
	 		COUPONNAME LIKE concat('%', #{search},'%'))
    	</select>
    	
    	<insert id="setCouponAdd" parameterType="CouponVO" useGeneratedKeys="true" keyProperty="couponId">
			INSERT INTO COUPON (COUPONID,COUPONNAME,DISCOUNT,ACTIVEDATE)
			VALUES (#{couponId},#{couponName},#{discount},#{activeDate})
		</insert>
		
		<delete id="setCouponDelete" parameterType="CouponVO">
			DELETE FROM COUPON WHERE COUPONID=#{couponId}
		</delete>
		
		<select id="getShop" parameterType="Pager" resultType="ShopVO">
			SELECT * FROM SHOP			   		    		
	 		WHERE SHOPNUM  is not null
	 		AND
	 		(ID LIKE concat('%', #{search},'%') or
	 		SHOPNAME LIKE concat('%', #{search},'%') or
	 		SHOPPHONE LIKE concat('%', #{search},'%') or
	 		LOCATION LIKE concat('%', #{search}, '%'))
	    	ORDER BY SHOPNUM DESC LIMIT #{startRow}, #{perPage}
    	</select>
    	
    	<select id="getShopMaster" resultType="ShopVO">
    		SELECT ID FROM SHOP
    	</select>
    	 
     	<insert id="setShopAdd" parameterType="ShopVO" useGeneratedKeys="true" keyProperty="shopNum">
			INSERT INTO SHOP  (SHOPNUM, ID, SHOPNAME,LOCATION,X_AXIS,Y_AXIS,SHOPPHONE,OPENTIME,CLOSETIME,SALE,DISTANCE,OPEN)
			VALUE (#{shopNum},#{id},#{shopName},#{location},#{x_axis},#{y_axis},#{shopPhone},9,21,0,5000,0);
		</insert>
		
		<delete id="setShopDelete" parameterType="ShopVO">
			DELETE FROM SHOP WHERE SHOPNUM=#{shopNum}
		</delete>
		
		<select id="getShopDetail" resultType="ShopVO">
			SELECT * FROM SHOP WHERE ID=#{id}
		</select>
		
		<select id="getShopTotalCount" parameterType="pager" resultType="Long">
	 		SELECT COUNT(SHOPNUM) FROM SHOP 		    		
	 		WHERE
	 		(ID LIKE concat('%', #{search},'%') or
	 		SHOPNAME LIKE concat('%', #{search},'%') or
	 		SHOPPHONE LIKE concat('%', #{search},'%'))
    	</select>
		
		<update id="setShopUpdate" parameterType="ShopVO">
			UPDATE SHOP SET ID=#{id},SHOPNAME=#{shopName},LOCATION=#{location},X_AXIS=#{x_axis},Y_AXIS=#{y_axis},SHOPPHONE=#{shopPhone},SALE=#{sale},OPEN=#{open}  WHERE SHOPNUM=#{shopNum}
    	</update>
		
		<!-- email count -->
		<select id="getEmailTotalCount" parameterType="pager" resultType="Long">
	 		SELECT COUNT(EMAILNUM) FROM EMAIL		    		
	 		WHERE
	 		<choose>
		 		<when test="kind == 'col1'">
		 			RECEIVER LIKE concat('%', #{search},'%')
		 		</when>
		 		<when test="kind == 'col2'">
		 			TITLE LIKE concat('%', #{search},'%')
		 		</when>
		 		<otherwise>
			 		CONTENTS LIKE concat('%', #{search},'%')
		 		</otherwise>
		 	</choose>
    	</select>
		<!-- SUBSTR(CONTENTS,1,300)  -->
		<select id="getEmail" parameterType="Pager" resultType="EmailVO">
	 		SELECT EMAILNUM, RECEIVER, TITLE, CONTENTS, SENDDATE FROM EMAIL
	 		WHERE EMAILNUM  is not null
	 		AND
			<choose>
		 		<when test="kind == 'col1'">
		 			RECEIVER LIKE concat('%', #{search},'%')
		 		</when>
		 		<when test="kind == 'col2'">
		 			TITLE LIKE concat('%', #{search},'%')
		 		</when>
		 		<otherwise>
			 		CONTENTS LIKE concat('%', #{search},'%')
		 		</otherwise>
		 	</choose>
	    	ORDER BY EMAILNUM DESC LIMIT #{startRow}, #{perPage}
    	</select>
		
		<select id="getAll" resultType="String">
			SELECT EMAIL FROM USER
    	</select>
		
		<select id="getSeller" resultType="String">
			SELECT EMAIL FROM USER WHERE USERTYPE = 1
    	</select>
    	
    	<select id="getUser" resultType="String">
			SELECT EMAIL FROM USER WHERE USERTYPE = 2
    	</select>
		
		<insert id="setSend" parameterType="EmailVO" useGeneratedKeys="true" keyProperty="emailNum">
			INSERT INTO EMAIL (EMAILNUM,RECEIVER,TITLE,CONTENTS, SENDDATE)
			VALUES (null,#{receiver},#{title},#{contents},NOW())
		</insert>

		<select id="getBannerFileList" resultType="BannerFileVO">
    		SELECT * FROM BANNERFILE
    	</select>
    	
    	<insert id="setBannerFileAdd" parameterType="BannerFileVO">
    		INSERT INTO BANNERFILE
    		VALUES (NULL, #{fileName}, #{oriName})
    	</insert>
    	
    	<delete id="setBannerFileDelete" parameterType="BannerFileVO">
    		DELETE FROM BANNERFILE WHERE FILENUM=#{fileNum}
    	</delete>
    </mapper>
